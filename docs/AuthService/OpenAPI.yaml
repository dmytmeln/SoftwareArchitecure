# OpenAPI Specification for Auth Service
openapi: 3.0.3
info:
  title: Auth Service API
  version: 1.0.0
  description: API for user authentication and management in the Order Management System.
servers:
  - url: http://auth-service:8080
    description: Auth Service base URL
paths:
  /register:
    post:
      summary: Register a new user
      description: Registers a new user in the system.
      operationId: registerUser
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request (e.g., email already exists)
      security: []
  /login:
    post:
      summary: Login and issue JWT token
      description: Authenticates a user and issues a JWT token upon successful login.
      operationId: loginUser
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful, JWT token issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
      security: []
  /users/me:
    get:
      summary: Get user data
      description: Retrieves the authenticated user's data.
      operationId: getUserData
      tags:
        - Users
      responses:
        '200':
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized (JWT required)
      security:
        - BearerAuth: []
    put:
      summary: Update user details
      description: Updates the authenticated user's details.
      operationId: updateUserDetails
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User details updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request (e.g., email already exists)
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        fullName:
          type: string
        password:
          type: string
      required:
        - email
        - password
        - fullName
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token for authentication
        email:
          type: string
      required:
        - token
        - user
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        fullName:
          type: string
        role:
          type: string
          enum: [CUSTOMER, ADMIN]
          description: Role of the user
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - fullName
        - role
    UpdateUserRequest:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
          format: email