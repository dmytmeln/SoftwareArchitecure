# OpenAPI Specification for Order Service
openapi: 3.0.3
info:
  title: Order Service API
  version: 1.0.0
  description: API for managing orders and shopping carts in the Order Management System.
servers:
  - url: http://order-service:8080
    description: Order Service base URL
paths:
  /orders:
    get: 
      summary: Get all user orders
      description: Retrieve the customer's orders
      operationId: getUserOrders
      tags:
        - Orders
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
    post:
      summary: Create a new order
      description: Creates a new order from the customer's cart.
      operationId: createOrder
      tags:
        - Orders
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request (e.g., empty cart)
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
  /orders/{orderId}:
      get: 
        summary: Get user order
        description: Retrieve the customer's order details
        operationId: getOrder
        tags:
          - Orders
        parameters:
          - name: orderId
            in: path
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: Order retrieved successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Order'
          '401':
            description: Unauthorized
          '404': 
            description: Order Not Found
        security:
          - BearerAuth: []
  /orders/{orderId}/cancel:
    post:
      summary: Cancel an order
      description: Cancels an existing order.
      operationId: cancelOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Order can't be canceled
        '401':
          description: Unauthorized
        '404':
          description: Order not found
      security:
        - BearerAuth: []
  /orders/{orderId}/confirm:
    post:
      summary: Confirm an order
      description: Confirms an order.
      operationId: confirmOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Order confirmed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400': 
          description: Order can't be confirmed
        '404':
          description: Order not found
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
  /carts:
    get:
      summary: Get user cart
      description: Retrieves the customer's shopping cart contents.
      operationId: getUserCart
      tags:
        - Cart
      responses:
        '200':
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
        '401':
          description: Unauthorized (JWT required)
      security:
        - BearerAuth: []
    post:
      summary: Add product to cart
      description: Adds a product to the customer's cart.
      operationId: addProductToCart
      tags:
        - Cart
      parameters:
        - name: productId
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to add to the cart
      responses:
        '200':
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        '400':
          description: Product already added
        '401':
          description: Unauthorized
        '404':
          description: Product Not Found
      security:
        - BearerAuth: []
    delete:
      summary: Remove product from cart
      description: Removes a product from the customer's cart.
      operationId: removeProductFromCart
      tags:
        - Cart
      parameters:
        - name: productId
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to remove from the cart
      responses:
        '204':
          description: Product removed from cart successfully
        '404':
          description: Product is absent in the cart.
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
    put:
      summary: Change product quantity in cart
      description: Updates the quantity of a product in the customer's cart.
      operationId: changeProductQuantityInCart
      tags:
        - Cart
      parameters:
        - name: productId
          in: query
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to change quantity
        - name: quantity
          in: query
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: Desired quantity of the product
      responses:
        '200':
          description: Product quantity updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        '400':
          description: Invalid quantity
        '401':
          description: Unauthorized
        '404': 
          description: Product is absent in the cart
      security:
        - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        status:
          type: string
          enum: [PENDING, RESERVED, FAILED, CONFIRMED, CANCELLED, COMPLETED]
        totalAmount:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    OrderItem:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        quantity:
          type: integer
          format: int32
        unit_price:
          type: number
          format: double
    CartItem:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
