# OpenAPI Specification for Inventory Service
openapi: 3.0.3
info:
  title: Inventory Service API
  version: 1.0.0
  description: API for managing product inventory in the Order Management System.
servers:
  - url: http://inventory-service:8080
    description: Inventory Service base URL
paths:
  /products:
    get:
      summary: Get all products
      description: Retrieves all available products for browsing.
      operationId: getAllProducts
      tags:
        - Products
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
    post:
      summary: Add new product
      description: Adds a new product to the inventory.
      operationId: addNewProduct
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Product added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid product details
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (ADMIN role required)
      security:
        - BearerAuth: []
  /products/{productId}:
    get:
      summary: Get product details
      description: Retrieves product.
      operationId: getProduct
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to update
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '404':
          description: Product not found
      security:
        - BearerAuth: []
    put:
      summary: Change product details
      description: Updates details of an existing product.
      operationId: changeProductDetails
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid product details
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (ADMIN role required)
        '404':
          description: Product not found
      security:
        - BearerAuth: []
    delete:
      summary: Delete a product
      description: Removes a product from the inventory.
      operationId: deleteProduct
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the product to delete
      responses:
        '204':
          description: Product deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (ADMIN role required)
        '404':
          description: Product not found
      security:
        - BearerAuth: []
  /inventory:
    get:
      summary: Get current inventory levels
      description: Retrieves current stock levels for all products.
      operationId: getCurrentInventory
      tags:
        - Inventory
      responses:
        '200':
          description: Inventory levels retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (ADMIN role required)
      security:
        - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Product:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: number
          format: double
        availableStock:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - productId
        - name
        - price
    ProductRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: number
          format: double
          minimum: 0
        availableStock:
          type: integer
          format: int32
          minimum: 0
      required:
        - name
        - price
        - availableStock
    Inventory:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        productName:
          type: string
        availableStock:
          type: integer
          format: int32
      required:
        - productId
        - name
        - availableStock